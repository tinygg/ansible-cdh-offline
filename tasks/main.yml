---
# tasks file for ansible-cdh-offline

- name: "[step 01] Configuration"
  debug:
    msg:
    - "cdh_repo_url_cm={{ cdh_repo_url_cm }}"
    - "cdh_repo_url_cdh={{ cdh_repo_url_cdh }}"
    - "install_type_PARCEL: {{install_type_PARCEL}}"
    - "cdh_parcel_url_cdh={{ cdh_parcel_url_cdh }}"
    - "cdh_parcel_url_cm={{ cdh_parcel_url_cm }}"
    - "parcel_file={{ parcel_file }}"
    - "sha_file={{ sha_file }}"
    - "json_file={{ json_file }}"
    - "cm_gz_file={{ cm_gz_file }}"
    - "parcel_install_dir={{ parcel_install_dir }}"

- name: "[step 02] Install JDK #Install Check ..."
  shell: 'unset ORACLE_JAVA_INSTALL&&source /etc/profile&&echo $ORACLE_JAVA_INSTALL'
  register: tag_rlt

- name: "[step 02] Install JDK #Debug ORACLE_JAVA_INSTALL tag ..."
  debug: var=tag_rlt verbosity=0

- name: "[step 02] Install JDK #JDK do install ..."
  include_tasks: install_JDK.yml
  when: not tag_rlt.stdout == "1"

###################################################
# prepare dir
###################################################
- name: "Install dir preparing"
  file:
    path: "{{ item }}"
    state: directory
    owner: cloudera-scm
    group: cloudera-scm
  with_items:
  - "{{ parcel_install_dir }}/cloudera-manager"
  - "{{ parcel_install_dir }}/cloudera"
  - "{{ parcel_install_dir }}/cloudera/csd"
  - "{{ parcel_install_dir }}/cloudera/parcels"
  - "{{ parcel_install_dir }}/cloudera/parcel-repo"
  when: install_type_PARCEL

#useradd --system --home=/opt/cloudera-manager/cm-5.16.1/run/cloudera-scm-server/ --no-create-home --shell=/bin/false --comment "Cloudera SCM User" cloudera-scm
- name: "Create cloudera-scm account"
  user:
    name: cloudera-scm
    groups: cloudera-scm
    comment: "Cloudera SCM User"
    shell: "/bin/false"
    home: "{{ parcel_install_dir }}/cloudera-manager/cm-{{ cdh_version }}/run/cloudera-scm-server/"
###################################################
# cm_gz_file
###################################################
- name: "[0].cm_gz_file check"
  stat:
    path: "{{ parcel_install_dir }}/{{ cm_gz_file }}"
  register: rlt_cm_gz
  when: install_type_PARCEL

- name: "[0].cm_gz_file debug"
  debug: var=rlt_cm_gz
  when: install_type_PARCEL

- name: "[0].download cm_gz_file"
  get_url:
    url: "{{cdh_parcel_url_cm}}/{{ cm_gz_file }}"
    dest: "{{ parcel_install_dir }}/{{ cm_gz_file }}"
    owner: cloudera-scm
    group: cloudera-scm
    mode: 0666
  retries: 4
  delay: 10
  when: install_type_PARCEL and not rlt_cm_gz.stat.exists

- name: "[0].cm_gz_file check unzip stat /opt/cloudera-manager/cm-5.16.1/sbin/cmf-server"
  stat:
    path: "{{ parcel_install_dir }}/cloudera-manager/cm-{{ cdh_version }}/sbin/cmf-server"
  register: rlt_cm_sbin
  when: install_type_PARCEL

- name: "[0].rlt_cm_sbin debug"
  debug: var=rlt_cm_sbin
  when: install_type_PARCEL

- name: "[0].unzip cm_gz_file"
  unarchive:
    src: "{{ parcel_install_dir }}/{{ cm_gz_file }}"
    dest: "{{ parcel_install_dir }}/cloudera-manager"
    owner: cloudera-scm
    group: cloudera-scm
    remote_src: yes
  when: install_type_PARCEL and not rlt_cm_sbin.stat.exists

- name: "makesure owner:group"
  file:
    path: "{{item}}"
    state: directory
    owner: cloudera-scm
    group: cloudera-scm
    recurse: yes
  with_items:
  - "{{ parcel_install_dir }}/cloudera-manager"
  - "{{ parcel_install_dir }}/cloudera"
  when: install_type_PARCEL
###################################################

- name: "[step 03] Install Cloudera Manager Server. #Install CDH manager server"
  include_tasks: install_CDH_manager_server.yml
  when: cdh_manager and not install_type_PARCEL

- name: "[step 03] Install Cloudera Manager Server. #Install CDH manager server"
  include_tasks: install_CDH_parcel_cm_server.yml
  when: cdh_manager and install_type_PARCEL

- name: "[step 03] Install Cloudera Manager Agent. #Install CDH agent && start cloudera-scm-agent service"
  include_tasks: install_CDH_agent.yml
  when: cdh_agent and not install_type_PARCEL

- name: "[step 03] Install Cloudera Manager Agent. #Install CDH agent && start cloudera-scm-agent service"
  include_tasks: install_CDH_parcel_cm_agent.yml
  when: cdh_agent and install_type_PARCEL

- name: "[step 04] Install Databases of preparse directory"
  file:
    path: "/usr/share/java"
    state: "directory"
  when: cdh_manager

# http://10.0.0.253:8000/files/mysql-connector-java.jar
- name: "[step 04] Install Databases of preparse jar"
  get_url:
    url: "{{ cdh_base_url }}/mysql-connector-java.jar"
    dest: "/usr/share/java/mysql-connector-java.jar"
  when: cdh_manager

- name: "[step 04] Install Databases of drop database"
  mysql_db:
    name: scm
    state: absent
  when: cdh_manager and hostvars[inventory_hostname]['ansible_default_ipv4']['address'] == db_host and drop_old_cdh

- name: "[step 04] Install Databases of create database"
  mysql_db:
    name: scm
    state: present
  when: cdh_manager and hostvars[inventory_hostname]['ansible_default_ipv4']['address'] == db_host

- name: "[step 04] Install Databases"
  debug:
   msg: "setting:\n\tdb_type=>{{ db_type }},\n\tdb_host=>{{ db_host }},\n\tdb_port=>{{ db_port }},\n\tdb_user=>{{ db_user }},\n\tdb_pass=>{{ db_pass }}"
  when: cdh_manager

- name: "[step 05] Set up the Cloudera Manager Database"
  shell: "/usr/share/cmf/schema/scm_prepare_database.sh {{db_type}} {{db_name}} {{db_user}} {{db_pass}} --host {{db_host}} --port {{db_port}}"
  when: cdh_manager and not install_type_PARCEL

- name: "[step 05] Set up the Cloudera Manager Database"
  shell: "{{ parcel_install_dir }}/cloudera-manager/cm-{{ cdh_version }}/share/cmf/schema/scm_prepare_database.sh {{db_type}} {{db_name}} {{db_user}} {{db_pass}} --host {{db_host}} --port {{db_port}}"
  when: cdh_manager and install_type_PARCEL

# start service
# sudo systemctl start cloudera-scm-server (以服务的方式启动)
- name: "[step 06] Install CDH and Other Software of [start cloudera-scm-server]"
  service:
    name: cloudera-scm-server
    state: restarted
  register: rlt_scm_server
  when: cdh_manager and not install_type_PARCEL

- name: "[step 06] Install CDH and Other Software of [start cloudera-scm-server]"
  shell: "service cloudera-scm-server restart&&service cloudera-scm-server status -l"
  register: rlt_scm_server
  when: cdh_manager and install_type_PARCEL

- name: "[step 06] Install CDH and Other Software of [print status of service loudera-scm-server]"
  debug: var=rlt_scm_server
  when: cdh_manager

# sudo tail -f /var/log/cloudera-scm-server/cloudera-scm-server.log
- name: "[step 06] Install CDH and Other Software of [echo log]"
  debug:
    msg: "show the log using command: sudo tail -f /var/log/cloudera-scm-server/cloudera-scm-server.log or cat /var/log/cloudera-scm-server/cloudera-scm-server.log"
  when: cdh_manager

- name: "[step 07] Set Up a Cluster"
  debug:
    msg:
    - "Login and setup the cluster http://{{server_host}}:7180 with username/password = (admin/admin) by default."
    - "1. Setup #1) Terms and Conditions of End User => Check |Agree|, then Next"
    - "2. Setup #2) Which Version to deploy? => Click |Cloudera Express|, then Next"
    - "3. Setup #3) List of all the packages and licenses => Click Next"
    - "4. Setup #4) Find hosts for the cluster => Input all your cluster_hosts: {{ cluster_hosts }}, then Click |Search|, after a while it'll show your wanted hosts, then Check on the list, then Click Next"
    - "5. Setup #5.1) Choose storage => Check |Use data package|, then Choose |CDH Version: CDH {{ cdh_v }}|"
    - "   Setup #5.2)                   Choose |the Specialized CDH Version: User Defined Storage|, then input url: {{ cdh_repo_url_cdh }}/{{ cdh_version }}/"
    - "   Setup #5.2)                   the Specialized Cloudera Manager Agent Version, Choose |User Defined Storage|, then input url: {{ cdh_repo_url_cm }}/{{ cdh_version }}/"
    - "   Setup #5.3)                   User Defined Main URL|, input url: {{ cdh_repo_url_cdh }}/RPM-GPG-KEY-cloudera , then Next"
    - "6. Setup #6) JDK install option: DO NOT CHECK ANY CHECKBOX!!! then Next"
    - "7. Setup #7) Standalone Mode: DO NOT CHECK ANY CHECKBOX!!! then Next"
    - "8. Setup #8) SSH Token: input password(recommend, but all the hosts must be the same password) or upload your key is both ok, then Next"
    - "9. Setup #9) Install Agents, simple. If you failled, you can check logs, is flexible."
  when: cdh_manager and not install_type_PARCEL
